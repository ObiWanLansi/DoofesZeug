using System;
using System.IO;
using System.Reflection;

using DoofesZeug.Attributes;
using DoofesZeug.Extensions;
using DoofesZeug.Models;

using Microsoft.VisualStudio.TestTools.UnitTesting;



namespace DoofesZeug.UnitTest.Formalities
{
    [TestClass]
    public class TestNamespaces
    {
        private static readonly string DIV = new('-', 80);

        private static readonly string SOURCE = @"..\..\..\..\DoofesZeug.Library\Src";
        //private static readonly string SOURCE = @"O:\DoofesZeug\DoofesZeug.Library\Src";

        //-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

        /// <summary>
        /// Executes this instance.
        /// </summary>
        [TestMethod]
        public void Execute()
        {
            Type tEntityBase = typeof(EntityBase);

            Assembly assembly = tEntityBase.Assembly;

            foreach( Type type in assembly.ExportedTypes )
            {
                if( type.GetCustomAttribute(typeof(GeneratedAttribute)) != null )
                {
                    // We skip the autogenerated code.
                    continue;
                }

                string strName = type.Name;
                string strNamespace = type.Namespace;

                Assert.IsFalse(strNamespace.IsEmpty());
                Assert.IsTrue(strNamespace.StartsWith("DoofesZeug."));

                strNamespace = strNamespace [11..];
                int iIndex = strName.IndexOf("`");
                if( iIndex > 0 )
                {
                    strName = strName.Substring(0, iIndex);
                }

                string strSourceFile = $"{SOURCE}\\{ strNamespace.Replace('.', '\\') }\\{strName}.cs";
                Console.Out.WriteLineAsync(strSourceFile);

                Assert.IsTrue(File.Exists(strSourceFile));
            }
        }
    }
}
